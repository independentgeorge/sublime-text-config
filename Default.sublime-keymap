[
   { "keys": ["ctrl+shift+n"], "command": "_" },
   { "keys": ["ctrl+shift+w"], "command": "_" },
   { "keys": ["ctrl+o"], "command": "_" },
   { "keys": ["ctrl+shift+t"], "command": "_" },
   { "keys": ["alt+o"], "command": "_" },
   { "keys": ["ctrl+n"], "command": "_" },
   { "keys": ["ctrl+s"], "command": "_" },
   { "keys": ["ctrl+shift+s"], "command": "_" },
   { "keys": ["ctrl+f4"], "command": "_" },
   { "keys": ["ctrl+w"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+b"], "command": "_" },
   { "keys": ["f11"], "command": "_" },
   { "keys": ["shift+f11"], "command": "_" },
   { "keys": ["backspace"], "command": "_" },
   { "keys": ["shift+backspace"], "command": "_" },
   { "keys": ["ctrl+shift+backspace"], "command": "_" },
   { "keys": ["delete"], "command": "_" },
   { "keys": ["enter"], "command": "_" },
   { "keys": ["shift+enter"], "command": "_" },
   { "keys": ["ctrl+z"], "command": "_" },
   { "keys": ["ctrl+shift+z"], "command": "_" },
   { "keys": ["ctrl+y"], "command": "_" },
   { "keys": ["ctrl+u"], "command": "_" },
   { "keys": ["ctrl+shift+u"], "command": "_" },
   { "keys": ["shift+delete"], "command": "_" },
   { "keys": ["ctrl+insert"], "command": "_" },
   { "keys": ["shift+insert"], "command": "_" },
   { "keys": ["ctrl+x"], "command": "_" },
   { "keys": ["ctrl+c"], "command": "_" },
   { "keys": ["ctrl+v"], "command": "_" },
   { "keys": ["ctrl+shift+v"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+v"], "command": "_" },
   { "keys": ["left"], "command": "_" },
   { "keys": ["right"], "command": "_" },
   { "keys": ["up"], "command": "_" },
   { "keys": ["down"], "command": "_" },
   { "keys": ["shift+left"], "command": "_" },
   { "keys": ["shift+right"], "command": "_" },
   { "keys": ["shift+up"], "command": "_" },
   { "keys": ["shift+down"], "command": "_" },
   { "keys": ["ctrl+left"], "command": "_" },
   { "keys": ["ctrl+right"], "command": "_" },
   { "keys": ["ctrl+shift+left"], "command": "_" },
   { "keys": ["ctrl+shift+right"], "command": "_" },
   { "keys": ["alt+left"], "command": "_" },
   { "keys": ["alt+right"], "command": "_" },
   { "keys": ["alt+shift+left"], "command": "_" },
   { "keys": ["alt+shift+right"], "command": "_" },
   { "keys": ["ctrl+alt+up"], "command": "_" },
   { "keys": ["ctrl+alt+down"], "command": "_" },
   { "keys": ["pageup"], "command": "_" },
   { "keys": ["pagedown"], "command": "_" },
   { "keys": ["shift+pageup"], "command": "_" },
   { "keys": ["shift+pagedown"], "command": "_" },
   { "keys": ["home"], "command": "_" },
   { "keys": ["end"], "command": "_" },
   { "keys": ["shift+home"], "command": "_" },
   { "keys": ["shift+end"], "command": "_" },
   { "keys": ["ctrl+home"], "command": "_" },
   { "keys": ["ctrl+end"], "command": "_" },
   { "keys": ["ctrl+shift+home"], "command": "_" },
   { "keys": ["ctrl+shift+end"], "command": "_" },
   { "keys": ["ctrl+up"], "command": "_" },
   { "keys": ["ctrl+down"], "command": "_" },
   { "keys": ["ctrl+pagedown"], "command": "_" },
   { "keys": ["ctrl+pageup"], "command": "_" },
   { "keys": ["ctrl+tab"], "command": "_" },
   { "keys": ["ctrl+shift+tab"], "command": "_" },
   { "keys": ["ctrl+a"], "command": "_" },
   { "keys": ["ctrl+shift+l"], "command": "_" },
   { "keys": ["escape"], "command": "_" },
   { "keys": ["tab"], "command": "_" },
   { "keys": ["shift+tab"], "command": "_" },
   { "keys": ["ctrl+]"], "command": "_" },
   { "keys": ["ctrl+["], "command": "_" },
   { "keys": ["insert"], "command": "_" },
   { "keys": ["ctrl+l"], "command": "_" },
   { "keys": ["ctrl+d"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+d"], "command": "_" },
   { "keys": ["ctrl+shift+space"], "command": "_" },
   { "keys": ["ctrl+shift+m"], "command": "_" },
   { "keys": ["ctrl+m"], "command": "_" },
   { "keys": ["ctrl+shift+j"], "command": "_" },
   { "keys": ["ctrl+shift+a"], "command": "_" },
   { "keys": ["alt+."], "command": "_" },
   { "keys": ["ctrl+q"], "command": "_" },
   { "keys": ["ctrl+shift+q"], "command": "_" },
   { "keys": ["ctrl+enter"], "command": "_" },
   { "keys": ["ctrl+shift+enter"], "command": "_" },
   { "keys": ["enter"], "command": "_" },
   { "keys": ["ctrl+p"], "command": "_" },
   { "keys": ["ctrl+shift+p"], "command": "_" },
   { "keys": ["ctrl+r"], "command": "_" },
   { "keys": ["ctrl+g"], "command": "_" },
   { "keys": ["ctrl+;"], "command": "_" },
   { "keys": ["f12"], "command": "_" },
   { "keys": ["shift+f12"], "command": "_" },
   { "keys": ["ctrl+shift+r"], "command": "_" },
   { "keys": ["alt+keypad_minus"], "command": "_" },
   { "keys": ["alt+shift+keypad_minus"], "command": "_" },
   { "keys": ["alt+-"], "command": "_" },
   { "keys": ["alt+shift+-"], "command": "_" },
   { "keys": ["ctrl+i"], "command": "_" },
   { "keys": ["ctrl+shift+i"], "command": "_" },
   { "keys": ["ctrl+f"], "command": "_" },
   { "keys": ["ctrl+h"], "command": "_" },
   { "keys": ["ctrl+shift+h"], "command": "_" },
   { "keys": ["f3"], "command": "_" },
   { "keys": ["shift+f3"], "command": "_" },
   { "keys": ["ctrl+f3"], "command": "_" },
   { "keys": ["ctrl+shift+f3"], "command": "_" },
   { "keys": ["alt+f3"], "command": "_" },
   { "keys": ["ctrl+e"], "command": "_" },
   { "keys": ["ctrl+shift+e"], "command": "_" },
   { "keys": ["ctrl+shift+f"], "command": "_" },
   { "keys": ["f4"], "command": "_" },
   { "keys": ["shift+f4"], "command": "_" },
   { "keys": ["ctrl+."], "command": "_" },
   { "keys": ["ctrl+,"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+z"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+/"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+;"], "command": "_" },
   { "keys": ["f6"], "command": "_" },
   { "keys": ["ctrl+f6"], "command": "_" },
   { "keys": ["ctrl+shift+f6"], "command": "_" },
   { "keys": ["ctrl+shift+up"], "command": "_" },
   { "keys": ["ctrl+shift+down"], "command": "_" },
   { "keys": ["ctrl+backspace"], "command": "_" },
   { "keys": ["ctrl+shift+backspace"], "command": "_" },
   { "keys": ["ctrl+delete"], "command": "_" },
   { "keys": ["ctrl+shift+delete"], "command": "_" },
   { "keys": ["ctrl+/"], "command": "_" },
   { "keys": ["ctrl+shift+/"], "command": "_" },
   { "keys": ["ctrl+j"], "command": "_" },
   { "keys": ["ctrl+shift+d"], "command": "_" },
   { "keys": ["ctrl+`"], "command": "_" },
   { "keys": ["ctrl+space"], "command": "_" },
   { "keys": ["ctrl+alt+shift+p"], "command": "_" },
   { "keys": ["f7"], "command": "_" },
   { "keys": ["ctrl+b"], "command": "_" },
   { "keys": ["ctrl+shift+b"], "command": "_" },
   { "keys": ["ctrl+break"], "command": "_" },
   { "keys": ["ctrl+t"], "command": "_" },
   { "keys": ["f9"], "command": "_" },
   { "keys": ["ctrl+f9"], "command": "_" },
   { "keys": ["\""], "command": "_" },
   { "keys": ["backspace"], "command": "_" },
   { "keys": ["'"], "command": "_" },
   { "keys": ["backspace"], "command": "_" },
   { "keys": ["("], "command": "_" },
   { "keys": [")"], "command": "_" },
   { "keys": ["backspace"], "command": "_" },
   { "keys": ["["], "command": "_" },
   { "keys": ["]"], "command": "_" },
   { "keys": ["backspace"], "command": "_" },
   { "keys": ["{"], "command": "_" },
   { "keys": ["}"], "command": "_" },
   { "keys": ["backspace"], "command": "_" },
   { "keys": ["enter"], "command": "_" },
   { "keys": ["shift+enter"], "command": "_" },
   { "keys": ["enter"], "command": "_" },
   { "keys": ["shift+enter"], "command": "_" },
   { "keys": ["alt+shift+1"], "command": "_" },
   { "keys": ["alt+shift+2"], "command": "_" },
   { "keys": ["alt+shift+3"], "command": "_" },
   { "keys": ["alt+shift+4"], "command": "_" },
   { "keys": ["alt+shift+8"], "command": "_" },
   { "keys": ["alt+shift+9"], "command": "_" },
   { "keys": ["alt+shift+5"], "command": "_" },
   { "keys": ["ctrl+1"], "command": "_" },
   { "keys": ["ctrl+2"], "command": "_" },
   { "keys": ["ctrl+3"], "command": "_" },
   { "keys": ["ctrl+4"], "command": "_" },
   { "keys": ["ctrl+5"], "command": "_" },
   { "keys": ["ctrl+6"], "command": "_" },
   { "keys": ["ctrl+7"], "command": "_" },
   { "keys": ["ctrl+8"], "command": "_" },
   { "keys": ["ctrl+9"], "command": "_" },
   { "keys": ["ctrl+shift+1"], "command": "_" },
   { "keys": ["ctrl+shift+2"], "command": "_" },
   { "keys": ["ctrl+shift+3"], "command": "_" },
   { "keys": ["ctrl+shift+4"], "command": "_" },
   { "keys": ["ctrl+shift+5"], "command": "_" },
   { "keys": ["ctrl+shift+6"], "command": "_" },
   { "keys": ["ctrl+shift+7"], "command": "_" },
   { "keys": ["ctrl+shift+8"], "command": "_" },
   { "keys": ["ctrl+shift+9"], "command": "_" },
   { "keys": ["ctrl+0"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+up"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+shift+up"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+down"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+left"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+right"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+shift+left"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+shift+right"], "command": "_" },
   { "keys": ["alt+1"], "command": "_" },
   { "keys": ["alt+2"], "command": "_" },
   { "keys": ["alt+3"], "command": "_" },
   { "keys": ["alt+4"], "command": "_" },
   { "keys": ["alt+5"], "command": "_" },
   { "keys": ["alt+6"], "command": "_" },
   { "keys": ["alt+7"], "command": "_" },
   { "keys": ["alt+8"], "command": "_" },
   { "keys": ["alt+9"], "command": "_" },
   { "keys": ["alt+0"], "command": "_" },
   { "keys": ["f2"], "command": "_" },
   { "keys": ["shift+f2"], "command": "_" },
   { "keys": ["ctrl+f2"], "command": "_" },
   { "keys": ["ctrl+shift+f2"], "command": "_" },
   { "keys": ["alt+f2"], "command": "_" },
   { "keys": ["ctrl+shift+k"], "command": "_" },
   { "keys": ["alt+q"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+u"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+l"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+space"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+a"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+w"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+x"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+y"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+k"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+backspace"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+g"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+c"], "command": "_" },
   { "keys": ["ctrl++"], "command": "_" },
   { "keys": ["ctrl+="], "command": "_" },
   { "keys": ["ctrl+keypad_plus"], "command": "_" },
   { "keys": ["ctrl+-"], "command": "_" },
   { "keys": ["ctrl+keypad_minus"], "command": "_" },
   { "keys": ["ctrl+equals"], "command": "_" },
   { "keys": ["ctrl+shift+equals"], "command": "_" },
   { "keys": ["ctrl+shift+keypad_plus"], "command": "_" },
   { "keys": ["alt+shift+w"], "command": "_" },
   { "keys": ["ctrl+shift+["], "command": "_" },
   { "keys": ["ctrl+shift+]"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+1"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+2"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+3"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+4"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+5"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+6"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+7"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+8"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+9"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+0"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+j"], "command": "_" },
   { "keys": ["ctrl+k","ctrl+t"], "command": "_" },
   { "keys": ["context_menu"], "command": "_" },
   { "keys": ["alt+c"], "command": "_" },
   { "keys": ["alt+r"], "command": "_" },
   { "keys": ["alt+w"], "command": "_" },
   { "keys": ["alt+a"], "command": "_" },
   { "keys": ["enter"], "command": "_" },
   { "keys": ["shift+enter"], "command": "_" },
   { "keys": ["alt+enter"], "command": "_" },
   { "keys": ["enter"], "command": "_" },
   { "keys": ["shift+enter"], "command": "_" },
   { "keys": ["alt+enter"], "command": "_" },
   { "keys": ["ctrl+alt+enter"], "command": "_" },
   { "keys": ["enter"], "command": "_" },
   { "keys": ["shift+enter"], "command": "_" },
   { "keys": ["alt+enter"], "command": "_" },
   { "keys": ["ctrl+alt+enter"], "command": "_" },
   { "keys": ["/"], "command": "_" },

   { "keys": ["'"], "command": "insert", "args": {"characters": "'"} },
   { "keys": ["\""], "command": "insert", "args": {"characters": "\""} },
   { "keys": ["("], "command": "insert", "args": {"characters": "("} },
   { "keys": [")"], "command": "insert", "args": {"characters": ")"} },
   { "keys": ["["], "command": "insert", "args": {"characters": "["} },
   { "keys": ["]"], "command": "insert", "args": {"characters": "]"} },
   { "keys": ["{"], "command": "insert", "args": {"characters": "{"} },
   { "keys": ["}"], "command": "insert", "args": {"characters": "}"} },
   { "keys": ["/"], "command": "insert", "args": {"characters": "/"} },

   //////////////////////////////////////////////////

   { "keys": ["ctrl+shift+n"], "command": "new_window" },
   { "keys": ["ctrl+o"], "command": "prompt_open_file" },
   { "keys": ["ctrl+p"], "command": "prompt_select_workspace" },
   { "keys": ["ctrl+n"], "command": "new_file" },
   { "keys": ["ctrl+s"], "command": "save" },
   { "keys": ["ctrl+shift+s"], "command": "prompt_save_as" },
   { "keys": ["ctrl+w"], "command": "close" },
   { "keys": ["ctrl+shift+w"], "command": "reopen_last_file" },
   { "keys": ["backspace"], "command": "left_delete" },
   { "keys": ["shift+backspace"], "command": "left_delete" },
   { "keys": ["ctrl+shift+backspace"], "command": "left_delete" },
   { "keys": ["enter"], "command": "insert", "args": {"characters": "\n"} },
   { "keys": ["shift+enter"], "command": "insert", "args": {"characters": "\n"} },
   { "keys": ["ctrl+z"], "command": "undo" },
   { "keys": ["ctrl+y"], "command": "redo" },
   { "keys": ["ctrl+x"], "command": "cut" },
   { "keys": ["ctrl+c"], "command": "copy" },
   { "keys": ["ctrl+v"], "command": "paste_and_indent" },
   { "keys": ["ctrl+shift+v"], "command": "paste" },
   { "keys": ["left"], "command": "move", "args": {"by": "characters", "forward": false} },
   { "keys": ["right"], "command": "move", "args": {"by": "characters", "forward": true} },
   { "keys": ["up"], "command": "move", "args": {"by": "lines", "forward": false} },
   { "keys": ["down"], "command": "move", "args": {"by": "lines", "forward": true} },
   { "keys": ["shift+left"], "command": "move", "args": {"by": "characters", "forward": false, "extend": true} },
   { "keys": ["shift+right"], "command": "move", "args": {"by": "characters", "forward": true, "extend": true} },
   { "keys": ["shift+up"], "command": "move", "args": {"by": "lines", "forward": false, "extend": true} },
   { "keys": ["shift+down"], "command": "move", "args": {"by": "lines", "forward": true, "extend": true} },
   { "keys": ["ctrl+left"], "command": "move", "args": {"by": "words", "forward": false} },
   { "keys": ["ctrl+right"], "command": "move", "args": {"by": "word_ends", "forward": true} },
   { "keys": ["ctrl+shift+left"], "command": "move", "args": {"by": "words", "forward": false, "extend": true} },
   { "keys": ["ctrl+shift+right"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true} },
   { "keys": ["alt+left"], "command": "move", "args": {"by": "subwords", "forward": false} },
   { "keys": ["alt+right"], "command": "move", "args": {"by": "subword_ends", "forward": true} },
   { "keys": ["alt+shift+left"], "command": "move", "args": {"by": "subwords", "forward": false, "extend": true} },
   { "keys": ["alt+shift+right"], "command": "move", "args": {"by": "subword_ends", "forward": true, "extend": true} },
   { "keys": ["alt+up"], "command": "select_lines", "args": {"forward": false} },
   { "keys": ["alt+down"], "command": "select_lines", "args": {"forward": true} },
   { "keys": ["pageup"], "command": "move", "args": {"by": "pages", "forward": false} },
   { "keys": ["pagedown"], "command": "move", "args": {"by": "pages", "forward": true} },
   { "keys": ["shift+pageup"], "command": "move", "args": {"by": "pages", "forward": false, "extend": true} },
   { "keys": ["shift+pagedown"], "command": "move", "args": {"by": "pages", "forward": true, "extend": true} },
   { "keys": ["home"], "command": "move_to", "args": {"to": "bol", "extend": false} },
   { "keys": ["end"], "command": "move_to", "args": {"to": "eol", "extend": false} },
   { "keys": ["shift+home"], "command": "move_to", "args": {"to": "bol", "extend": true} },
   { "keys": ["shift+end"], "command": "move_to", "args": {"to": "eol", "extend": true} },
   { "keys": ["ctrl+home"], "command": "move_to", "args": {"to": "bof", "extend": false} },
   { "keys": ["ctrl+end"], "command": "move_to", "args": {"to": "eof", "extend": false} },
   { "keys": ["ctrl+shift+home"], "command": "move_to", "args": {"to": "bof", "extend": true} },
   { "keys": ["ctrl+shift+end"], "command": "move_to", "args": {"to": "eof", "extend": true} },
   { "keys": ["ctrl+tab"], "command": "next_view" },
   { "keys": ["ctrl+shift+tab"], "command": "prev_view" },
   { "keys": ["ctrl+a"], "command": "select_all" },
   { "keys": ["alt+s"], "command": "split_selection_into_lines" },
   { "keys": ["escape"], "command": "single_selection", "context": [{ "key": "num_selections", "operator": "not_equal", "operand": 1 }] },
   { "keys": ["escape"], "command": "move", "args": {"by": "characters", "forward": false}, "context": [{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }] },
   { "keys": ["escape"], "command": "clear_fields", "context": [{ "key": "has_next_field", "operator": "equal", "operand": true }] },
   { "keys": ["escape"], "command": "clear_fields", "context": [{ "key": "has_prev_field", "operator": "equal", "operand": true }] },
   { "keys": ["escape"], "command": "hide_panel", "args": {"cancel": true}, "context": [{ "key": "panel_visible", "operator": "equal", "operand": true }] },
   { "keys": ["escape"], "command": "hide_overlay", "context": [{ "key": "overlay_visible", "operator": "equal", "operand": true }] },
   { "keys": ["escape"], "command": "hide_popup", "context": [{ "key": "popup_visible", "operator": "equal", "operand": true }] },
   { "keys": ["escape"], "command": "hide_auto_complete", "context": [{ "key": "auto_complete_visible", "operator": "equal", "operand": true }] },
   { "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": true} },
   { "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false}, "context": [{ "key": "setting.tab_completion", "operator": "equal", "operand": true }, { "key": "preceding_text", "operator": "not_regex_match", "operand": ".*\\b[0-9]+$", "match_all": true }]},
   { "keys": ["tab"], "command": "select", "context": [{ "key": "overlay_visible", "operator": "equal", "operand": true }] },
   { "keys": ["tab"], "command": "replace_completion_with_next_completion", "context": [{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" }, { "key": "setting.tab_completion", "operator": "equal", "operand": true } ] },
   { "keys": ["tab"], "command": "reindent", "context": [{ "key": "setting.auto_indent", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_match", "operand": "^$", "match_all": true }, { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true } ] },
   { "keys": ["tab"], "command": "indent", "context": [{ "key": "text", "operator": "regex_contains", "operand": "\n" } ] },
   { "keys": ["tab"], "command": "next_field", "context": [{ "key": "has_next_field", "operator": "equal", "operand": true } ] },
   { "keys": ["tab"], "command": "commit_completion", "context": [{ "key": "auto_complete_visible" }, { "key": "setting.auto_complete_commit_on_tab" } ] },
   { "keys": ["shift+tab"], "command": "insert", "args": {"characters": "\t"} },
   { "keys": ["shift+tab"], "command": "unindent", "context": [{ "key": "setting.shift_tab_unindent", "operator": "equal", "operand": true } ] },
   { "keys": ["shift+tab"], "command": "unindent", "context": [{ "key": "preceding_text", "operator": "regex_match", "operand": "^[\t ]*" } ] },
   { "keys": ["shift+tab"], "command": "unindent", "context": [{ "key": "text", "operator": "regex_contains", "operand": "\n" } ] },
   { "keys": ["shift+tab"], "command": "prev_field", "context": [{ "key": "has_prev_field", "operator": "equal", "operand": true } ] },
   { "keys": ["alt+f"], "command": "find_under_expand" },
   { "keys": ["alt+d"], "command": "find_under_expand_skip" },
   { "keys": ["ctrl+space"], "command": "expand_selection", "args": {"to": "brackets"} },
   { "keys": ["enter"], "command": "commit_completion", "context": [{ "key": "auto_complete_visible" }, { "key": "setting.auto_complete_commit_on_tab", "operand": false }] },
   { "keys": ["ctrl+f"], "command": "show_panel", "args": {"panel": "replace", "reverse": false} },
   { "keys": ["ctrl+h"], "command": "show_panel", "args": {"panel": "replace", "reverse": false} },
   { "keys": ["alt+g"], "command": "find_all_under" },
   { "keys": ["ctrl+h"], "command": "show_panel", "args": {"panel": "find_in_files"} },
   { "keys": ["ctrl+up"], "command": "swap_line_up" },
   { "keys": ["ctrl+shift+up"], "command": "swap_line_up" },
   { "keys": ["ctrl+down"], "command": "swap_line_down" },
   { "keys": ["ctrl+shift+down"], "command": "swap_line_down" },
   { "keys": ["ctrl+backspace"], "command": "delete_word", "args": { "forward": false } },
   { "keys": ["alt+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },
   { "keys": ["ctrl+delete"], "command": "delete_word", "args": { "forward": true } },
   { "keys": ["alt+delete"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"} },
   { "keys": ["alt+c"], "command": "toggle_comment", "args": { "block": false } },
   { "keys": ["ctrl+e"], "command": "join_lines" },
   { "keys": ["ctrl+d"], "command": "duplicate_line" },
   { "keys": ["¸"], "command": "show_overlay", "args": {"overlay": "command_palette"} },
   { "keys": ["alt+`"], "command": "show_panel", "args": {"panel": "console", "toggle": true} },

   // Auto-pair quotes
   { "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"$0\""}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
         { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true },
         { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }
      ]
   },
   { "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"${0:$SELECTION}\""}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
      ]
   },
   { "keys": ["\""], "command": "move", "args": {"by": "characters", "forward": true}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
         { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
         { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
      ]
   },
   { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": "\"$", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
         { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
         { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
      ]
   },

   // Auto-pair single quotes
   { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0'"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
         { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
         { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true }
      ]
   },
   { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'${0:$SELECTION}'"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
      ]
   },
   { "keys": ["'"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true },
         { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
         { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
      ]
   },
   { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": "'$", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true },
         { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
         { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
      ]
   },

   // Auto-pair backticks
   { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
         { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[`a-zA-Z0-9_]$", "match_all": true },
         { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }
      ]
   },
   { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
      ]
   },
   { "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
         { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
         { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
      ]
   },
   { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
         { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
         { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
      ]
   },

   // Auto-pair brackets
   { "keys": ["("], "command": "insert_snippet", "args": {"contents": "($0)"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
      ]
   },
   { "keys": ["("], "command": "insert_snippet", "args": {"contents": "(${0:$SELECTION})"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
      ]
   },
   { "keys": [")"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
      ]
   },
   { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
      ]
   },

   // Auto-pair square brackets
   { "keys": ["["], "command": "insert_snippet", "args": {"contents": "[$0]"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
      ]
   },
   { "keys": ["["], "command": "insert_snippet", "args": {"contents": "[${0:$SELECTION}]"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
      ]
   },
   { "keys": ["]"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
      ]
   },
   { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": "\\[$", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
      ]
   },

   // Auto-pair curly brackets
   { "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{$0}"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true }
      ]
   },
   { "keys": ["{"], "command": "wrap_block", "args": {"begin": "{", "end": "}"}, "context":
      [
         { "key": "indented_block", "match_all": true },
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },
      ]
   },
   { "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{${0:$SELECTION}}"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
      ]
   },
   { "keys": ["}"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
      ]
   },
   { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
      [
         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
      ]
   },

   { "keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
      [
         { "key": "setting.auto_indent", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
      ]
   },
   { "keys": ["shift+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
      [
         { "key": "setting.auto_indent", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
      ]
   },

   { "keys": ["enter"], "command": "auto_indent_tag", "context":
      [
         { "key": "setting.auto_indent", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "selector", "operator": "equal", "operand": "punctuation.definition.tag.begin", "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": ">$", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^</", "match_all": true },
      ]
   },
   { "keys": ["shift+enter"], "command": "auto_indent_tag", "context":
      [
         { "key": "setting.auto_indent", "operator": "equal", "operand": true },
         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
         { "key": "selector", "operator": "equal", "operand": "punctuation.definition.tag.begin", "match_all": true },
         { "key": "preceding_text", "operator": "regex_contains", "operand": ">$", "match_all": true },
         { "key": "following_text", "operator": "regex_contains", "operand": "^</", "match_all": true },
      ]
   },

   { "keys": ["ctrl+shift+1"], "command": "set_layout", "args":
      {
         "cols": [0.0, 1.0],
         "rows": [0.0, 1.0],
         "cells": [[0, 0, 1, 1]]
      }
   },
   { "keys": ["ctrl+shift+2"], "command": "set_layout", "args":
      {
         "cols": [0.0, 0.5, 1.0],
         "rows": [0.0, 1.0],
         "cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
      }
   },
   { "keys": ["ctrl+shift+3"], "command": "set_layout", "args":
      {
         "cols": [0.0, 0.33, 0.66, 1.0],
         "rows": [0.0, 1.0],
         "cells": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]]
      }
   },
   { "keys": ["ctrl+shift+4"], "command": "set_layout", "args":
      {
         "cols": [0.0, 0.5, 1.0],
         "rows": [0.0, 0.5, 1.0],
         "cells": [[0, 0, 1, 2], [1, 0, 2, 1], [1, 1, 2, 2]]
      }
   },

   { "keys": ["ctrl+1"], "command": "focus_group", "args": { "group": 0 } },
   { "keys": ["ctrl+2"], "command": "focus_group", "args": { "group": 1 } },
   { "keys": ["ctrl+3"], "command": "focus_group", "args": { "group": 2 } },
   { "keys": ["ctrl+4"], "command": "focus_group", "args": { "group": 3 } },

   { "keys": ["alt+1"], "command": "select_by_index", "args": { "index": 0 } },
   { "keys": ["alt+2"], "command": "select_by_index", "args": { "index": 1 } },
   { "keys": ["alt+3"], "command": "select_by_index", "args": { "index": 2 } },
   { "keys": ["alt+4"], "command": "select_by_index", "args": { "index": 3 } },
   { "keys": ["alt+5"], "command": "select_by_index", "args": { "index": 4 } },
   { "keys": ["alt+6"], "command": "select_by_index", "args": { "index": 5 } },
   { "keys": ["alt+7"], "command": "select_by_index", "args": { "index": 6 } },
   { "keys": ["alt+8"], "command": "select_by_index", "args": { "index": 7 } },
   { "keys": ["alt+9"], "command": "select_by_index", "args": { "index": 8 } },
   { "keys": ["alt+0"], "command": "select_by_index", "args": { "index": 9 } },

   { "keys": ["alt+x"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Line.sublime-macro"} },

   { "keys": ["ctrl+q"], "command": "swap_case" },

   { "keys": ["f1"], "command": "fold_by_level", "args": {"level": 1} },
   { "keys": ["f2"], "command": "fold_by_level", "args": {"level": 2} },
   { "keys": ["f3"], "command": "fold_by_level", "args": {"level": 3} },
   { "keys": ["f4"], "command": "fold_by_level", "args": {"level": 4} },
   { "keys": ["shift+f1"], "command": "unfold_all" },
   { "keys": ["shift+f2"], "command": "unfold_all" },
   { "keys": ["shift+f3"], "command": "unfold_all" },
   { "keys": ["shift+f4"], "command": "unfold_all" },

   { "keys": ["alt+f1"], "command": "toggle_regex", "context": [{ "key": "setting.is_widget", "operator": "equal", "operand": true }] },
   { "keys": ["alt+f2"], "command": "toggle_case_sensitive", "context": [{ "key": "setting.is_widget", "operator": "equal", "operand": true }] },
   { "keys": ["alt+f3"], "command": "toggle_whole_word", "context": [{ "key": "setting.is_widget", "operator": "equal", "operand": true }] },

   { "keys": ["f5"], "command": "toggle_setting", "args": {"setting": "word_wrap"} },
   { "keys": ["f6"], "command": "toggle_setting", "args": {"setting": "line_numbers"} },
   { "keys": ["f7"], "command": "toggle_minimap" },
   { "keys": ["f8"], "command": "toggle_side_bar" },

   // Replace panel key bindings
   { "keys": ["enter"], "command": "find_next", "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
   { "keys": ["shift+enter"], "command": "find_prev", "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
   { "keys": ["ctrl+f"], "command": "find_next", "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
   { "keys": ["ctrl+shift+f"], "command": "find_prev", "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
   { "keys": ["ctrl+g"], "command": "find_all", "args": {"close_panel": true}, "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
   { "keys": ["ctrl+r"], "command": "replace_next", "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
   { "keys": ["ctrl+t"], "command": "replace_all", "args": {"close_panel": true}, "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },

   // Find in Files panel key bindings
   // { "keys": ["enter"], "command": "find_all", "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}] },   // works without binding
   { "keys": ["ctrl+f"], "command": "find_all", "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}] },
   { "keys": ["ctrl+g"], "command": "find_all", "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}] },
   { "keys": ["ctrl+r"], "command": "replace_all", "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}] },
   { "keys": ["ctrl+t"], "command": "replace_all", "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}] },

   // HTML, XML close tag
   { "keys": ["/"], "command": "close_tag", "args": { "insert_slash": true }, "context":
      [
         { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml) - string - comment", "match_all": true },
         { "key": "preceding_text", "operator": "regex_match", "operand": ".*<$", "match_all": true },
         { "key": "setting.auto_close_tags" }
      ]
   }
]
